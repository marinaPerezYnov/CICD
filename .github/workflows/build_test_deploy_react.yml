name: Build, Test and Deploy React Application
# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
 push:
   branches: [ main ]
 pull_request:
   branches: [ main ]
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
        # node-version: [20.x, 21.x]
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
     - uses: actions/checkout@v4
     - name: Use Node.js ${{ matrix.node-version }}
       uses: actions/setup-node@v2
       with:
         node-version: ${{ matrix.node-version }}
     - name: npm ci, build and test
       run: |
         cd my-app
         npm install
         npm ci
         npm run jsdoc
         npm run build --if-present
         npm test
     - name: Upload coverage reports to Codecov
       uses: codecov/codecov-action@v5
       with:
         token: ${{ secrets.CODECOV_TOKEN }}
     - name: Configure GitHub Pages
       id: pages
       uses: actions/configure-pages@v3
     - name: Check if version is updated
       id: check_version
       run: |
          # Get the latest version from the package.json file in the repository
          LATEST_VERSION=$(jq -r '.version' my-app/package.json)
          # Get the latest version from the npm registry
          NPM_VERSION=$(npm view ci-cd-ynov-marinaperezynov version)
          echo "LATEST_VERSION=${LATEST_VERSION}" >> $GITHUB_ENV
          echo "NPM_VERSION=${NPM_VERSION}" >> $GITHUB_ENV
          if [ "$LATEST_VERSION" == "$NPM_VERSION" ]; then
            echo "Version is up to date."
            echo "version_updated=false" >> $GITHUB_ENV
          else
            echo "Version is not up to date."
            echo "version_updated=true" >> $GITHUB_ENV
          fi
     - name: Publish to npm if version is updated
       if: env.version_updated == 'true'
       env:
         NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
       run: |
         cd my-app
         npm run build-npm
         npm version patch
         npm publish
         git config --global user.email "marina.perez@ynov.com"
         git config --global user.name "Marina Perez"
         git add .
         git commit -m "update version"
         git push
    #  - name: Copy index.html to 404.html for GitHub Pages SPA routing
    #    run: |
    #      cd my-app
    #      cp build/index.html build/404.html
     - name: Upload GitHub Pages artifact
       uses: actions/upload-pages-artifact@v3
       with:
         # Upload entire repository
         path: my-app/build
         if-no-files-found: error

   # Deploy job
  deploy:
     # Deploy to the github-pages environment
     environment:
       name: github-pages
       url: ${{steps.deployment.outputs.page_url}}
     runs-on: ubuntu-latest
     # Grant GITHUB_TOKEN the permissions required to make a page deployment
     permissions:
       pages: write
       id-token: write
     needs: build_test

      # Specify runner + deployment step
     steps:
       - name: Deploy to GitHub Pages
         id: deployment
         uses: actions/deploy-pages@v4

  deploy_vercel:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vervel Environment Information
        run: vercel pull --yes --environment=preview --token ${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy to prod 
        run: vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }}